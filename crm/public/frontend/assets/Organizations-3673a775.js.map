{"version":3,"file":"Organizations-3673a775.js","sources":["../../../../frontend/src/components/ListViews/OrganizationsListView.vue","../../../../frontend/src/pages/Organizations.vue"],"sourcesContent":["<template>\n  <ListView\n    :columns=\"columns\"\n    :rows=\"rows\"\n    :options=\"{\n      getRowRoute: (row) => ({\n        name: 'Organization',\n        params: { organizationId: row.name },\n      }),\n      selectable: options.selectable,\n      showTooltip: options.showTooltip,\n      resizeColumn: options.resizeColumn,\n    }\"\n    row-key=\"name\"\n  >\n    <ListHeader class=\"sm:mx-5 mx-3\" @columnWidthUpdated=\"emit('columnWidthUpdated')\">\n      <ListHeaderItem\n        v-for=\"column in columns\"\n        :key=\"column.key\"\n        :item=\"column\"\n        @columnWidthUpdated=\"emit('columnWidthUpdated', column)\"\n      >\n        <Button\n          v-if=\"column.key == '_liked_by'\"\n          variant=\"ghosted\"\n          class=\"!h-4\"\n          :class=\"isLikeFilterApplied ? 'fill-red-500' : 'fill-white'\"\n          @click=\"() => emit('applyLikeFilter')\"\n        >\n          <HeartIcon class=\"h-4 w-4\" />\n        </Button>\n      </ListHeaderItem>\n    </ListHeader>\n    <ListRows class=\"mx-3 sm:mx-5\" id=\"list-rows\">\n      <ListRow\n        v-for=\"row in rows\"\n        :key=\"row.name\"\n        v-slot=\"{ idx, column, item }\"\n        :row=\"row\"\n      >\n        <ListRowItem :item=\"item\">\n          <template #prefix>\n            <div v-if=\"column.key === 'organization_name'\">\n              <Avatar\n                v-if=\"item.label\"\n                class=\"flex items-center\"\n                :image=\"item.logo\"\n                :label=\"item.label\"\n                size=\"sm\"\n              />\n            </div>\n          </template>\n          <template #default=\"{ label }\">\n            <div\n              v-if=\"['modified', 'creation'].includes(column.key)\"\n              class=\"truncate text-base\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            >\n              <Tooltip :text=\"item.label\">\n                <div>{{ item.timeAgo }}</div>\n              </Tooltip>\n            </div>\n            <div v-else-if=\"column.type === 'Check'\">\n              <FormControl\n                type=\"checkbox\"\n                :modelValue=\"item\"\n                :disabled=\"true\"\n                class=\"text-gray-900\"\n              />\n            </div>\n            <div v-else-if=\"column.key === '_liked_by'\">\n              <Button\n                v-if=\"column.key == '_liked_by'\"\n                variant=\"ghosted\"\n                :class=\"isLiked(item) ? 'fill-red-500' : 'fill-white'\"\n                @click.stop.prevent=\"\n                  () =>\n                    emit('likeDoc', { name: row.name, liked: isLiked(item) })\n                \"\n              >\n                <HeartIcon class=\"h-4 w-4\" />\n              </Button>\n            </div>\n            <div\n              v-else\n              class=\"truncate text-base\"\n              @click=\"\n                (event) =>\n                  emit('applyFilter', {\n                    event,\n                    idx,\n                    column,\n                    item,\n                    firstColumn: columns[0],\n                  })\n              \"\n            >\n              {{ label }}\n            </div>\n          </template>\n        </ListRowItem>\n      </ListRow>\n    </ListRows>\n    <ListSelectBanner>\n      <template #actions=\"{ selections, unselectAll }\">\n        <Dropdown\n          :options=\"listBulkActionsRef.bulkActions(selections, unselectAll)\"\n        >\n          <Button icon=\"more-horizontal\" variant=\"ghost\" />\n        </Dropdown>\n      </template>\n    </ListSelectBanner>\n  </ListView>\n  <ListFooter\n    class=\"border-t sm:px-5 px-3 py-2\"\n    v-model=\"pageLengthCount\"\n    :options=\"{\n      rowCount: options.rowCount,\n      totalCount: options.totalCount,\n    }\"\n    @loadMore=\"emit('loadMore')\"\n  />\n  <ListBulkActions\n    ref=\"listBulkActionsRef\"\n    v-model=\"list\"\n    doctype=\"CRM Organization\"\n    :options=\"{\n      hideAssign: true,\n    }\"\n  />\n</template>\n<script setup>\nimport HeartIcon from '@/components/Icons/HeartIcon.vue'\nimport ListBulkActions from '@/components/ListBulkActions.vue'\nimport {\n  Avatar,\n  ListView,\n  ListHeader,\n  ListHeaderItem,\n  ListRows,\n  ListRow,\n  ListSelectBanner,\n  ListRowItem,\n  ListFooter,\n  Tooltip,\n  Dropdown,\n} from 'frappe-ui'\nimport { sessionStore } from '@/stores/session'\nimport { ref, computed, watch } from 'vue'\n\nconst props = defineProps({\n  rows: {\n    type: Array,\n    required: true,\n  },\n  columns: {\n    type: Array,\n    required: true,\n  },\n  options: {\n    type: Object,\n    default: () => ({\n      selectable: true,\n      showTooltip: true,\n      resizeColumn: false,\n      totalCount: 0,\n      rowCount: 0,\n    }),\n  },\n})\n\nconst emit = defineEmits([\n  'loadMore',\n  'updatePageCount',\n  'columnWidthUpdated',\n  'applyFilter',\n  'applyLikeFilter',\n  'likeDoc',\n])\n\nconst pageLengthCount = defineModel()\nconst list = defineModel('list')\n\nconst isLikeFilterApplied = computed(() => {\n  return list.value.params?.filters?._liked_by ? true : false\n})\n\nconst { user } = sessionStore()\n\nfunction isLiked(item) {\n  if (item) {\n    let likedByMe = JSON.parse(item)\n    return likedByMe.includes(user)\n  }\n}\n\nwatch(pageLengthCount, (val, old_value) => {\n  if (val === old_value) return\n  emit('updatePageCount', val)\n})\n\nconst listBulkActionsRef = ref(null)\n\ndefineExpose({\n  customListActions: computed(\n    () => listBulkActionsRef.value?.customListActions\n  ),\n})\n</script>\n","<template>\n  <LayoutHeader>\n    <template #left-header>\n      <Breadcrumbs :items=\"breadcrumbs\" />\n    </template>\n    <template #right-header>\n      <CustomActions\n        v-if=\"organizationsListView?.customListActions\"\n        :actions=\"organizationsListView.customListActions\"\n      />\n      <Button\n        variant=\"solid\"\n        :label=\"__('Create')\"\n        @click=\"showOrganizationModal = true\"\n      >\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </template>\n  </LayoutHeader>\n  <ViewControls\n    ref=\"viewControls\"\n    v-model=\"organizations\"\n    v-model:loadMore=\"loadMore\"\n    v-model:resizeColumn=\"triggerResize\"\n    v-model:updatedPageCount=\"updatedPageCount\"\n    doctype=\"CRM Organization\"\n  />\n  <OrganizationsListView\n    ref=\"organizationsListView\"\n    v-if=\"organizations.data && rows.length\"\n    v-model=\"organizations.data.page_length_count\"\n    v-model:list=\"organizations\"\n    :rows=\"rows\"\n    :columns=\"organizations.data.columns\"\n    :options=\"{\n      showTooltip: false,\n      resizeColumn: true,\n      rowCount: organizations.data.row_count,\n      totalCount: organizations.data.total_count,\n    }\"\n    @loadMore=\"() => loadMore++\"\n    @columnWidthUpdated=\"() => triggerResize++\"\n    @updatePageCount=\"(count) => (updatedPageCount = count)\"\n    @applyFilter=\"(data) => viewControls.applyFilter(data)\"\n    @applyLikeFilter=\"(data) => viewControls.applyLikeFilter(data)\"\n    @likeDoc=\"(data) => viewControls.likeDoc(data)\"\n  />\n  <div\n    v-else-if=\"organizations.data\"\n    class=\"flex h-full items-center justify-center\"\n  >\n    <div\n      class=\"flex flex-col items-center gap-3 text-xl font-medium text-gray-500\"\n    >\n      <OrganizationsIcon class=\"h-10 w-10\" />\n      <span>{{ __('No {0} Found', [__('Organizations')]) }}</span>\n      <Button :label=\"__('Create')\" @click=\"showOrganizationModal = true\">\n        <template #prefix><FeatherIcon name=\"plus\" class=\"h-4\" /></template>\n      </Button>\n    </div>\n  </div>\n  <OrganizationModal\n    v-model=\"showOrganizationModal\"\n    v-model:quickEntry=\"showQuickEntryModal\"\n  />\n  <QuickEntryModal\n    v-if=\"showQuickEntryModal\"\n    v-model=\"showQuickEntryModal\"\n    doctype=\"CRM Organization\"\n  />\n</template>\n<script setup>\nimport CustomActions from '@/components/CustomActions.vue'\nimport OrganizationsIcon from '@/components/Icons/OrganizationsIcon.vue'\nimport LayoutHeader from '@/components/LayoutHeader.vue'\nimport OrganizationModal from '@/components/Modals/OrganizationModal.vue'\nimport QuickEntryModal from '@/components/Settings/QuickEntryModal.vue'\nimport OrganizationsListView from '@/components/ListViews/OrganizationsListView.vue'\nimport ViewControls from '@/components/ViewControls.vue'\nimport { Breadcrumbs } from 'frappe-ui'\nimport {\n  dateFormat,\n  dateTooltipFormat,\n  timeAgo,\n  formatNumberIntoCurrency,\n} from '@/utils'\nimport { ref, computed } from 'vue'\nimport { useRoute } from 'vue-router'\n\nconst route = useRoute()\n\nconst organizationsListView = ref(null)\nconst showOrganizationModal = ref(false)\nconst showQuickEntryModal = ref(false)\n\nconst currentOrganization = computed(() => {\n  return organizations.value?.data?.data?.find(\n    (organization) => organization.name === route.params.organizationId,\n  )\n})\n\nconst breadcrumbs = computed(() => {\n  let items = [{ label: __('Organizations'), route: { name: 'Organizations' } }]\n  if (!currentOrganization.value) return items\n  items.push({\n    label: __(currentOrganization.value.name),\n    route: {\n      name: 'Organization',\n      params: { organizationId: currentOrganization.value.name },\n    },\n  })\n  return items\n})\n\n// organizations data is loaded in the ViewControls component\nconst organizations = ref({})\nconst loadMore = ref(1)\nconst triggerResize = ref(1)\nconst updatedPageCount = ref(20)\nconst viewControls = ref(null)\n\nconst rows = computed(() => {\n  if (\n    !organizations.value?.data?.data ||\n    !['list', 'group_by'].includes(organizations.value.data.view_type)\n  )\n    return []\n  return organizations.value?.data.data.map((organization) => {\n    let _rows = {}\n    organizations.value?.data.rows.forEach((row) => {\n      _rows[row] = organization[row]\n\n      if (row === 'organization_name') {\n        _rows[row] = {\n          label: organization.organization_name,\n          logo: organization.organization_logo,\n        }\n      } else if (row === 'website') {\n        _rows[row] = website(organization.website)\n      } else if (row === 'annual_revenue') {\n        _rows[row] = formatNumberIntoCurrency(\n          organization.annual_revenue,\n          organization.currency,\n        )\n      } else if (['modified', 'creation'].includes(row)) {\n        _rows[row] = {\n          label: dateFormat(organization[row], dateTooltipFormat),\n          timeAgo: __(timeAgo(organization[row])),\n        }\n      }\n    })\n    return _rows\n  })\n})\n\nfunction website(url) {\n  return url && url.replace(/^(?:https?:\\/\\/)?(?:www\\.)?/i, '')\n}\n</script>\n"],"names":["emit","__emit","pageLengthCount","_useModel","__props","list","isLikeFilterApplied","computed","_b","_a","user","sessionStore","isLiked","item","watch","val","old_value","listBulkActionsRef","ref","__expose","route","useRoute","organizationsListView","showOrganizationModal","showQuickEntryModal","currentOrganization","_c","organizations","organization","breadcrumbs","items","loadMore","triggerResize","updatedPageCount","viewControls","rows","_rows","row","website","formatNumberIntoCurrency","dateFormat","dateTooltipFormat","timeAgo","url"],"mappings":"qqDAoLA,MAAMA,EAAOC,EASPC,EAAkBC,EAAWC,EAAA,YAAC,EAC9BC,EAAOF,IAAY,MAAM,EAEzBG,EAAsBC,EAAS,IAAM,SACzC,MAAO,IAAAC,GAAAC,EAAAJ,EAAK,MAAM,SAAX,YAAAI,EAAmB,UAAnB,MAAAD,EAA4B,UACrC,CAAC,EAEK,CAAE,KAAAE,CAAM,EAAGC,EAAc,EAE/B,SAASC,EAAQC,EAAM,CACrB,GAAIA,EAEF,OADgB,KAAK,MAAMA,CAAI,EACd,SAASH,CAAI,CAElC,CAEAI,EAAMZ,EAAiB,CAACa,EAAKC,IAAc,CACrCD,IAAQC,GACZhB,EAAK,kBAAmBe,CAAG,CAC7B,CAAC,EAED,MAAME,EAAqBC,EAAI,IAAI,EAEnC,OAAAC,EAAa,CACX,kBAAmBZ,EACjB,IAAM,OAAA,OAAAE,EAAAQ,EAAmB,QAAnB,YAAAR,EAA0B,kBACjC,CACH,CAAC,o7FC/HD,MAAMW,EAAQC,EAAU,EAElBC,EAAwBJ,EAAI,IAAI,EAChCK,EAAwBL,EAAI,EAAK,EACjCM,EAAsBN,EAAI,EAAK,EAE/BO,EAAsBlB,EAAS,IAAM,WACzC,OAAOmB,GAAAlB,GAAAC,EAAAkB,EAAc,QAAd,YAAAlB,EAAqB,OAArB,YAAAD,EAA2B,OAA3B,YAAAkB,EAAiC,KACrCE,GAAiBA,EAAa,OAASR,EAAM,OAAO,eAEzD,CAAC,EAEKS,EAActB,EAAS,IAAM,CACjC,IAAIuB,EAAQ,CAAC,CAAE,MAAO,GAAG,eAAe,EAAG,MAAO,CAAE,KAAM,eAAe,EAAI,EAC7E,OAAKL,EAAoB,OACzBK,EAAM,KAAK,CACT,MAAO,GAAGL,EAAoB,MAAM,IAAI,EACxC,MAAO,CACL,KAAM,eACN,OAAQ,CAAE,eAAgBA,EAAoB,MAAM,IAAM,CAC3D,CACL,CAAG,EACMK,CACT,CAAC,EAGKH,EAAgBT,EAAI,EAAE,EACtBa,EAAWb,EAAI,CAAC,EAChBc,EAAgBd,EAAI,CAAC,EACrBe,EAAmBf,EAAI,EAAE,EACzBgB,EAAehB,EAAI,IAAI,EAEvBiB,EAAO5B,EAAS,IAAM,WAC1B,MACE,GAACC,GAAAC,EAAAkB,EAAc,QAAd,YAAAlB,EAAqB,OAArB,MAAAD,EAA2B,OAC5B,CAAC,CAAC,OAAQ,UAAU,EAAE,SAASmB,EAAc,MAAM,KAAK,SAAS,EAE1D,CAAE,GACJD,EAAAC,EAAc,QAAd,YAAAD,EAAqB,KAAK,KAAK,IAAKE,GAAiB,OAC1D,IAAIQ,EAAQ,CAAE,EACd,OAAA3B,EAAAkB,EAAc,QAAd,MAAAlB,EAAqB,KAAK,KAAK,QAAS4B,GAAQ,CAC9CD,EAAMC,CAAG,EAAIT,EAAaS,CAAG,EAEzBA,IAAQ,oBACVD,EAAMC,CAAG,EAAI,CACX,MAAOT,EAAa,kBACpB,KAAMA,EAAa,iBACpB,EACQS,IAAQ,UACjBD,EAAMC,CAAG,EAAIC,EAAQV,EAAa,OAAO,EAChCS,IAAQ,iBACjBD,EAAMC,CAAG,EAAIE,GACXX,EAAa,eACbA,EAAa,QACd,EACQ,CAAC,WAAY,UAAU,EAAE,SAASS,CAAG,IAC9CD,EAAMC,CAAG,EAAI,CACX,MAAOG,GAAWZ,EAAaS,CAAG,EAAGI,EAAiB,EACtD,QAAS,GAAGC,GAAQd,EAAaS,CAAG,CAAC,CAAC,CACvC,EAET,GACWD,CACX,EACA,CAAC,EAED,SAASE,EAAQK,EAAK,CACpB,OAAOA,GAAOA,EAAI,QAAQ,+BAAgC,EAAE,CAC9D"}