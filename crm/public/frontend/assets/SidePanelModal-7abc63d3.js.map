{"version":3,"file":"SidePanelModal-7abc63d3.js","sources":["../../../../frontend/src/components/Resizer.vue","../../../../frontend/src/components/Icons/LinkIcon.vue","../../../../frontend/src/components/Settings/SidePanelLayoutBuilder.vue","../../../../frontend/src/components/Settings/SidePanelModal.vue"],"sourcesContent":["<template>\n  <div class=\"relative\" :style=\"{ width: `${sidebarWidth}px` }\">\n    <slot v-bind=\"{ sidebarResizing, sidebarWidth }\" />\n    <div\n      class=\"absolute left-0 z-10 h-full w-1 cursor-col-resize bg-gray-300 opacity-0 transition-opacity hover:opacity-100\"\n      :class=\"{ 'opacity-100': sidebarResizing }\"\n      @mousedown=\"startResize\"\n    />\n  </div>\n</template>\n<script setup>\nimport { ref } from 'vue'\n\nconst props = defineProps({\n  defaultWidth: {\n    type: Number,\n    default: 352,\n  },\n  minWidth: {\n    type: Number,\n    default: 16 * 16,\n  },\n  maxWidth: {\n    type: Number,\n    default: 30 * 16,\n  },\n  side: {\n    type: String,\n    default: 'left',\n  },\n  parent: {\n    type: Object,\n    default: null,\n  },\n})\n\nconst sidebarResizing = ref(false)\nconst sidebarWidth = ref(props.defaultWidth)\n\nfunction startResize() {\n  document.addEventListener('mousemove', resize)\n  document.addEventListener('mouseup', () => {\n    document.body.classList.remove('select-none')\n    document.body.classList.remove('cursor-col-resize')\n    document.querySelectorAll('.select-text1').forEach((el) => {\n      el.classList.remove('select-text1')\n      el.classList.add('select-text')\n    })\n    localStorage.setItem('sidebarWidth', sidebarWidth.value)\n    sidebarResizing.value = false\n    document.removeEventListener('mousemove', resize)\n  })\n}\nfunction resize(e) {\n  sidebarResizing.value = true\n  document.body.classList.add('select-none')\n  document.body.classList.add('cursor-col-resize')\n  document.querySelectorAll('.select-text').forEach((el) => {\n    el.classList.remove('select-text')\n    el.classList.add('select-text1')\n  })\n  sidebarWidth.value =\n    props.side == 'left' ? e.clientX : window.innerWidth - e.clientX\n\n  let gap = props.parent ? distance() : 0\n  sidebarWidth.value = sidebarWidth.value - gap\n\n  // snap to props.defaultWidth\n  let range = [props.defaultWidth - 10, props.defaultWidth + 10]\n  if (sidebarWidth.value > range[0] && sidebarWidth.value < range[1]) {\n    sidebarWidth.value = props.defaultWidth\n  }\n\n  if (sidebarWidth.value < props.minWidth) {\n    sidebarWidth.value = props.minWidth\n  }\n  if (sidebarWidth.value > props.maxWidth) {\n    sidebarWidth.value = props.maxWidth\n  }\n}\nfunction distance() {\n  if (!props.parent) return 0\n  const rect = props.parent.getBoundingClientRect()\n  return window.innerWidth - rect[props.side]\n}\n</script>\n","<template>\n  <svg\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g filter=\"url(#filter0_b_525_5376)\">\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M9.50545 11.0115H11.5132C13.1775 11.0115 14.5268 9.66229 14.5268 7.99794C14.5268 6.3336 13.1775 4.98438 11.5132 4.98438L9.50545 4.98438V3.98438H11.5132C13.7298 3.98438 15.5268 5.78131 15.5268 7.99794C15.5268 10.2146 13.7298 12.0115 11.5132 12.0115H9.50545V11.0115ZM6.49422 4.98465H4.48647C2.82212 4.98465 1.4729 6.33387 1.4729 7.99822C1.4729 9.66256 2.82212 11.0118 4.48647 11.0118H6.49422V12.0118H4.48647C2.26984 12.0118 0.4729 10.2148 0.4729 7.99822C0.4729 5.78159 2.26983 3.98465 4.48647 3.98465H6.49422V4.98465ZM10.0079 8.49808H10.5079V7.49808H10.0079H5.99239H5.49239V8.49808H5.99239H10.0079Z\"\n        fill=\"currentColor\"\n      />\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_b_525_5376\"\n        x=\"-4\"\n        y=\"-4\"\n        width=\"24\"\n        height=\"24\"\n        filterUnits=\"userSpaceOnUse\"\n        color-interpolation-filters=\"sRGB\"\n      >\n        <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\" />\n        <feGaussianBlur in=\"BackgroundImageFix\" stdDeviation=\"2\" />\n        <feComposite\n          in2=\"SourceAlpha\"\n          operator=\"in\"\n          result=\"effect1_backgroundBlur_525_5376\"\n        />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"effect1_backgroundBlur_525_5376\"\n          result=\"shape\"\n        />\n      </filter>\n    </defs>\n  </svg>\n</template>\n","<template>\n  <div>\n    <Draggable :list=\"sections\" item-key=\"label\" class=\"flex flex-col\">\n      <template #item=\"{ element: section }\">\n        <div class=\"border-b\">\n          <div class=\"flex items-center justify-between p-2\">\n            <div\n              class=\"flex h-7 max-w-fit cursor-pointer items-center gap-2 pl-2 pr-3 text-base font-semibold leading-5\"\n              @click=\"section.opened = !section.opened\"\n            >\n              <FeatherIcon\n                name=\"chevron-right\"\n                class=\"h-4 text-gray-900 transition-all duration-300 ease-in-out\"\n                :class=\"{ 'rotate-90': section.opened }\"\n              />\n              <div v-if=\"!section.editingLabel\">\n                {{ __(section.label) || __('Untitled') }}\n              </div>\n              <div v-else class=\"flex gap-2 items-center\">\n                <Input\n                  v-model=\"section.label\"\n                  @keydown.enter=\"section.editingLabel = false\"\n                  @blur=\"section.editingLabel = false\"\n                  @click.stop\n                />\n                <Button\n                  v-if=\"section.editingLabel\"\n                  icon=\"check\"\n                  variant=\"ghost\"\n                  @click.stop=\"section.editingLabel = false\"\n                />\n              </div>\n            </div>\n            <div>\n              <Button\n                v-if=\"!section.editingLabel\"\n                icon=\"edit\"\n                variant=\"ghost\"\n                @click=\"section.editingLabel = true\"\n              />\n              <Button\n                v-if=\"section.editable !== false\"\n                icon=\"x\"\n                variant=\"ghost\"\n                @click=\"sections.splice(sections.indexOf(section), 1)\"\n              />\n            </div>\n          </div>\n          <div v-show=\"section.opened\" class=\"p-4 pt-0 pb-2\">\n            <Draggable\n              :list=\"section.fields\"\n              group=\"fields\"\n              item-key=\"label\"\n              class=\"flex flex-col gap-1\"\n              handle=\".cursor-grab\"\n            >\n              <template #item=\"{ element: field }\">\n                <div\n                  class=\"px-1.5 py-1 border rounded text-base text-gray-800 flex items-center justify-between gap-2\"\n                >\n                  <div class=\"flex items-center gap-2\">\n                    <DragVerticalIcon class=\"h-3.5 cursor-grab\" />\n                    <div>{{ field.label }}</div>\n                  </div>\n                  <div>\n                    <Button\n                      variant=\"ghost\"\n                      icon=\"x\"\n                      @click=\"\n                        section.fields.splice(section.fields.indexOf(field), 1)\n                      \"\n                    />\n                  </div>\n                </div>\n              </template>\n            </Draggable>\n            <Autocomplete\n              v-if=\"fields.data && section.editable !== false\"\n              value=\"\"\n              :options=\"fields.data\"\n              @change=\"(e) => addField(section, e)\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <Button\n                  class=\"w-full mt-2\"\n                  variant=\"outline\"\n                  @click=\"togglePopover()\"\n                  :label=\"__('Add Field')\"\n                >\n                  <template #prefix>\n                    <FeatherIcon name=\"plus\" class=\"h-4\" />\n                  </template>\n                </Button>\n              </template>\n              <template #item-label=\"{ option }\">\n                <div class=\"flex flex-col gap-1\">\n                  <div>{{ option.label }}</div>\n                  <div class=\"text-gray-500 text-sm\">\n                    {{ `${option.fieldname} - ${option.fieldtype}` }}\n                  </div>\n                </div>\n              </template>\n            </Autocomplete>\n            <div\n              v-else\n              class=\"flex justify-center items-center border rounded border-dashed p-3\"\n            >\n              <div class=\"text-sm text-gray-500\">\n                {{ __('This section is not editable') }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </template>\n    </Draggable>\n    <div class=\"p-2\">\n      <Button\n        class=\"w-full\"\n        variant=\"outline\"\n        :label=\"__('Add Section')\"\n        @click=\"\n          sections.push({ label: __('New Section'), opened: true, fields: [] })\n        \"\n      >\n        <template #prefix>\n          <FeatherIcon name=\"plus\" class=\"h-4\" />\n        </template>\n      </Button>\n    </div>\n  </div>\n</template>\n<script setup>\nimport Autocomplete from '@/components/frappe-ui/Autocomplete.vue'\nimport DragVerticalIcon from '@/components/Icons/DragVerticalIcon.vue'\nimport Draggable from 'vuedraggable'\nimport { Input, createResource } from 'frappe-ui'\nimport { computed, watch } from 'vue'\n\nconst props = defineProps({\n  sections: Object,\n  doctype: String,\n})\n\nconst restrictedFieldTypes = [\n  'Table',\n  'Geolocation',\n  'Attach',\n  'Attach Image',\n  'HTML',\n  'Signature',\n]\n\nconst params = computed(() => {\n  return {\n    doctype: props.doctype,\n    restricted_fieldtypes: restrictedFieldTypes,\n    as_array: true,\n  }\n})\n\nconst fields = createResource({\n  url: 'crm.api.doc.get_fields_meta',\n  params: params.value,\n  cache: ['fieldsMeta', props.doctype],\n  auto: true,\n})\n\nfunction addField(section, field) {\n  if (!field) return\n  section.fields.push(field)\n}\n\nwatch(\n  () => props.doctype,\n  () => fields.fetch(params.value),\n  { immediate: true },\n)\n</script>\n","<template>\n  <Dialog v-model=\"show\" :options=\"{ size: '3xl' }\">\n    <template #body>\n      <div ref=\"parentRef\" class=\"flex h-[calc(100vh_-_8rem)]\">\n        <div class=\"flex-1 flex flex-col justify-between gap-2 p-8\">\n          <div class=\"flex flex-col gap-2\">\n            <h2 class=\"flex gap-2 text-xl font-semibold leading-none h-5 mb-4\">\n              <div>{{ __('Edit Fields Layout') }}</div>\n              <Badge\n                v-if=\"dirty\"\n                :label=\"__('Not Saved')\"\n                variant=\"subtle\"\n                theme=\"orange\"\n              />\n            </h2>\n            <FormControl\n              type=\"select\"\n              v-model=\"_doctype\"\n              :label=\"__('DocType')\"\n              :options=\"['CRM Lead', 'CRM Deal']\"\n              @change=\"reload\"\n            />\n          </div>\n          <div class=\"flex flex-row-reverse gap-2\">\n            <Button\n              :loading=\"loading\"\n              :label=\"__('Save')\"\n              variant=\"solid\"\n              @click=\"saveChanges\"\n            />\n            <Button :label=\"__('Reset')\" @click=\"reload\" />\n            <Button\n              :label=\"preview ? __('Hide Preview') : __('Show Preview')\"\n              @click=\"preview = !preview\"\n            />\n          </div>\n        </div>\n        <Resizer\n          v-if=\"sections.data\"\n          class=\"flex flex-col justify-between border-l\"\n          :parent=\"parentRef\"\n          side=\"right\"\n        >\n          <div class=\"flex flex-1 flex-col justify-between overflow-hidden\">\n            <div class=\"flex flex-col overflow-y-auto\">\n              <SidePanelLayoutBuilder\n                v-if=\"!preview\"\n                :sections=\"sections.data\"\n                :doctype=\"_doctype\"\n              />\n              <div\n                v-else\n                v-for=\"(section, i) in sections.data\"\n                :key=\"section.label\"\n                class=\"flex flex-col p-3\"\n                :class=\"{ 'border-b': i !== sections.data.length - 1 }\"\n              >\n                <Section :is-opened=\"section.opened\" :label=\"section.label\">\n                  <SectionFields :fields=\"section.fields\" v-model=\"data\" />\n                </Section>\n              </div>\n            </div>\n          </div>\n        </Resizer>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport Section from '@/components/Section.vue'\nimport SectionFields from '@/components/SectionFields.vue'\nimport Resizer from '@/components/Resizer.vue'\nimport SidePanelLayoutBuilder from '@/components/Settings/SidePanelLayoutBuilder.vue'\nimport { useDebounceFn } from '@vueuse/core'\nimport { Dialog, Badge, call, createResource } from 'frappe-ui'\nimport { ref, watch, onMounted, nextTick } from 'vue'\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    default: 'CRM Lead',\n  },\n})\n\nconst show = defineModel()\nconst _doctype = ref(props.doctype)\nconst parentRef = ref(null)\nconst loading = ref(false)\nconst dirty = ref(false)\nconst preview = ref(false)\nconst data = ref({})\n\nfunction getParams() {\n  return { doctype: _doctype.value, type: 'Side Panel' }\n}\n\nconst sections = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_fields_layout',\n  cache: ['sidebar-sections', _doctype.value],\n  params: getParams(),\n  onSuccess(data) {\n    sections.originalData = JSON.parse(JSON.stringify(data))\n  },\n})\n\nwatch(\n  () => sections?.data,\n  () => {\n    dirty.value =\n      JSON.stringify(sections?.data) !== JSON.stringify(sections?.originalData)\n  },\n  { deep: true },\n)\n\nonMounted(() => useDebounceFn(reload, 100)())\n\nfunction reload() {\n  nextTick(() => {\n    sections.params = getParams()\n    sections.reload()\n  })\n}\n\nfunction saveChanges() {\n  let _sections = JSON.parse(JSON.stringify(sections.data))\n  _sections.forEach((section) => {\n    if (!section.fields) return\n    section.fields = section.fields.map(\n      (field) => field.fieldname || field.name,\n    )\n  })\n  loading.value = true\n  call(\n    'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.save_fields_layout',\n    {\n      doctype: _doctype.value,\n      type: 'Side Panel',\n      layout: JSON.stringify(_sections),\n    },\n  ).then(() => {\n    loading.value = false\n    reload()\n  })\n}\n</script>\n"],"names":["props","__props","sidebarResizing","ref","sidebarWidth","startResize","resize","el","e","gap","distance","range","rect","_hoisted_1","_hoisted_4","_cache","restrictedFieldTypes","params","computed","fields","createResource","addField","section","field","watch","show","_useModel","_doctype","parentRef","loading","dirty","preview","data","getParams","sections","onMounted","useDebounceFn","reload","nextTick","saveChanges","_sections","call"],"mappings":"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"}