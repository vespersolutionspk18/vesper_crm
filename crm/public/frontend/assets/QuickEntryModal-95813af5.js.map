{"version":3,"file":"QuickEntryModal-95813af5.js","sources":["../../../../frontend/src/components/Settings/QuickEntryLayoutBuilder.vue","../../../../frontend/src/components/Settings/QuickEntryModal.vue"],"sourcesContent":["<template>\n  <div>\n    <Draggable :list=\"sections\" item-key=\"label\" class=\"flex flex-col\">\n      <template #item=\"{ element: section }\">\n        <div\n          class=\"py-2 first:pt-0\"\n          :class=\"section.hideBorder ? '' : 'border-t first:border-t-0'\"\n        >\n          <div class=\"flex items-center justify-between pb-2\">\n            <div\n              class=\"flex h-7 max-w-fit cursor-pointer items-center gap-2 text-base font-semibold leading-5\"\n            >\n              <div\n                v-if=\"!section.editingLabel\"\n                :class=\"section.hideLabel ? 'text-gray-400' : ''\"\n              >\n                {{ __(section.label) || __('Untitled') }}\n              </div>\n              <div v-else class=\"flex gap-2 items-center\">\n                <Input\n                  v-model=\"section.label\"\n                  @keydown.enter=\"section.editingLabel = false\"\n                  @blur=\"section.editingLabel = false\"\n                  @click.stop\n                />\n                <Button\n                  v-if=\"section.editingLabel\"\n                  icon=\"check\"\n                  variant=\"ghost\"\n                  @click=\"section.editingLabel = false\"\n                />\n              </div>\n            </div>\n            <Dropdown :options=\"getOptions(section)\">\n              <template #default>\n                <Button variant=\"ghost\">\n                  <FeatherIcon name=\"more-horizontal\" class=\"h-4\" />\n                </Button>\n              </template>\n            </Dropdown>\n          </div>\n          <div>\n            <Draggable\n              :list=\"section.fields\"\n              group=\"fields\"\n              item-key=\"label\"\n              class=\"grid gap-2\"\n              :class=\"\n                section.columns ? 'grid-cols-' + section.columns : 'grid-cols-3'\n              \"\n              handle=\".cursor-grab\"\n            >\n              <template #item=\"{ element: field }\">\n                <div\n                  class=\"px-1.5 py-1 border rounded text-base text-gray-800 flex items-center justify-between gap-2\"\n                >\n                  <div class=\"flex items-center gap-2\">\n                    <DragVerticalIcon class=\"h-3.5 cursor-grab\" />\n                    <div>{{ field.label }}</div>\n                  </div>\n                  <div>\n                    <Button\n                      variant=\"ghost\"\n                      icon=\"x\"\n                      @click=\"\n                        section.fields.splice(section.fields.indexOf(field), 1)\n                      \"\n                    />\n                  </div>\n                </div>\n              </template>\n            </Draggable>\n            <Autocomplete\n              v-if=\"fields.data\"\n              value=\"\"\n              :options=\"fields.data\"\n              @change=\"(e) => addField(section, e)\"\n            >\n              <template #target=\"{ togglePopover }\">\n                <div\n                  class=\"grid gap-2 w-full\"\n                  :class=\"\n                    section.columns\n                      ? 'grid-cols-' + section.columns\n                      : 'grid-cols-3'\n                  \"\n                >\n                  <Button\n                    class=\"mt-2 w-full !h-[38px] !border-gray-200\"\n                    variant=\"outline\"\n                    @click=\"togglePopover()\"\n                    :label=\"__('Add Field')\"\n                  >\n                    <template #prefix>\n                      <FeatherIcon name=\"plus\" class=\"h-4\" />\n                    </template>\n                  </Button>\n                </div>\n              </template>\n              <template #item-label=\"{ option }\">\n                <div class=\"flex flex-col gap-1\">\n                  <div>{{ option.label }}</div>\n                  <div class=\"text-gray-500 text-sm\">\n                    {{ `${option.fieldname} - ${option.fieldtype}` }}\n                  </div>\n                </div>\n              </template>\n            </Autocomplete>\n          </div>\n        </div>\n      </template>\n    </Draggable>\n    <div class=\"py-2 border-t\">\n      <Button\n        class=\"w-full !h-[38px] !border-gray-200\"\n        variant=\"outline\"\n        :label=\"__('Add Section')\"\n        @click=\"\n          sections.push({\n            label: __('New Section'),\n            opened: true,\n            fields: [],\n          })\n        \"\n      >\n        <template #prefix>\n          <FeatherIcon name=\"plus\" class=\"h-4\" />\n        </template>\n      </Button>\n    </div>\n  </div>\n</template>\n<script setup>\nimport Autocomplete from '@/components/frappe-ui/Autocomplete.vue'\nimport DragVerticalIcon from '@/components/Icons/DragVerticalIcon.vue'\nimport Draggable from 'vuedraggable'\nimport { Dropdown, createResource } from 'frappe-ui'\nimport { computed, watch } from 'vue'\n\nconst props = defineProps({\n  sections: Object,\n  doctype: String,\n})\n\nconst restrictedFieldTypes = [\n  'Table',\n  'Geolocation',\n  'Attach',\n  'Attach Image',\n  'HTML',\n  'Signature',\n]\n\nconst params = computed(() => {\n  return {\n    doctype: props.doctype,\n    restricted_fieldtypes: restrictedFieldTypes,\n    as_array: true,\n  }\n})\n\nconst fields = createResource({\n  url: 'crm.api.doc.get_fields_meta',\n  params: params.value,\n  cache: ['fieldsMeta', props.doctype],\n  auto: true,\n})\n\nfunction addField(section, field) {\n  if (!field) return\n  section.fields.push(field)\n}\n\nfunction getOptions(section) {\n  return [\n    {\n      label: 'Edit',\n      icon: 'edit',\n      onClick: () => (section.editingLabel = true),\n      condition: () => section.editable !== false,\n    },\n    {\n      label: section.hideLabel ? 'Show Label' : 'Hide Label',\n      icon: section.hideLabel ? 'eye' : 'eye-off',\n      onClick: () => (section.hideLabel = !section.hideLabel),\n    },\n    {\n      label: section.hideBorder ? 'Show Border' : 'Hide Border',\n      icon: 'minus',\n      onClick: () => (section.hideBorder = !section.hideBorder),\n    },\n    {\n      label: 'Add Column',\n      icon: 'columns',\n      onClick: () =>\n        (section.columns = section.columns ? section.columns + 1 : 4),\n      condition: () => !section.columns || section.columns < 4,\n    },\n    {\n      label: 'Remove Column',\n      icon: 'columns',\n      onClick: () =>\n        (section.columns = section.columns ? section.columns - 1 : 2),\n      condition: () => !section.columns || section.columns > 1,\n    },\n    {\n      label: 'Remove Section',\n      icon: 'trash-2',\n      onClick: () => props.sections.splice(props.sections.indexOf(section), 1),\n      condition: () => section.editable !== false,\n    },\n  ]\n}\n\nwatch(\n  () => props.doctype,\n  () => fields.fetch(params.value),\n  { immediate: true },\n)\n</script>\n","<template>\n  <Dialog v-model=\"show\" :options=\"{ size: '3xl' }\">\n    <template #body>\n      <div class=\"flex flex-col overflow-hidden h-[calc(100vh_-_8rem)]\">\n        <div class=\"flex flex-col gap-2 p-8 pb-5\">\n          <h2 class=\"flex gap-2 text-xl font-semibold leading-none h-5 mb-4\">\n            <div>{{ __('Edit Quick Entry Layout') }}</div>\n            <Badge\n              v-if=\"dirty\"\n              :label=\"__('Not Saved')\"\n              variant=\"subtle\"\n              theme=\"orange\"\n            />\n          </h2>\n          <div class=\"flex gap-6 items-end\">\n            <FormControl\n              class=\"flex-1\"\n              type=\"select\"\n              v-model=\"_doctype\"\n              :label=\"__('DocType')\"\n              :options=\"['CRM Lead', 'CRM Deal', 'Contact', 'CRM Organization']\"\n              @change=\"reload\"\n            />\n            <div class=\"flex flex-row-reverse gap-2\">\n              <Button\n                :loading=\"loading\"\n                :label=\"__('Save')\"\n                variant=\"solid\"\n                @click=\"saveChanges\"\n              />\n              <Button :label=\"__('Reset')\" @click=\"reload\" />\n              <Button\n                :label=\"preview ? __('Hide Preview') : __('Show Preview')\"\n                @click=\"preview = !preview\"\n              />\n            </div>\n          </div>\n        </div>\n        <div v-if=\"sections?.data\" class=\"overflow-y-auto p-8 pt-3\">\n          <div\n            class=\"rounded-xl h-full inline-block w-full px-4 pb-6 pt-5 sm:px-6 transform overflow-y-auto bg-white text-left align-middle shadow-xl transition-all\"\n          >\n            <QuickEntryLayoutBuilder\n              v-if=\"!preview\"\n              :sections=\"sections.data\"\n              :doctype=\"_doctype\"\n            />\n            <Fields v-else :sections=\"sections.data\" :data=\"{}\" />\n          </div>\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<script setup>\nimport Fields from '@/components/Fields.vue'\nimport QuickEntryLayoutBuilder from '@/components/Settings/QuickEntryLayoutBuilder.vue'\nimport { useDebounceFn } from '@vueuse/core'\nimport { Dialog, Badge, call, createResource } from 'frappe-ui'\nimport { ref, watch, onMounted, nextTick } from 'vue'\n\nconst props = defineProps({\n  doctype: {\n    type: String,\n    default: 'CRM Lead',\n  },\n})\n\nconst show = defineModel()\nconst _doctype = ref(props.doctype)\nconst loading = ref(false)\nconst dirty = ref(false)\nconst preview = ref(false)\n\nfunction getParams() {\n  return { doctype: _doctype.value, type: 'Quick Entry' }\n}\n\nconst sections = createResource({\n  url: 'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.get_fields_layout',\n  cache: ['quick-entry-sections', _doctype.value],\n  params: getParams(),\n  onSuccess(data) {\n    sections.originalData = JSON.parse(JSON.stringify(data))\n  },\n})\n\nwatch(\n  () => sections?.data,\n  () => {\n    dirty.value =\n      JSON.stringify(sections?.data) !== JSON.stringify(sections?.originalData)\n  },\n  { deep: true },\n)\n\nonMounted(() => useDebounceFn(reload, 100)())\n\nfunction reload() {\n  nextTick(() => {\n    sections.params = getParams()\n    sections.reload()\n  })\n}\n\nfunction saveChanges() {\n  let _sections = JSON.parse(JSON.stringify(sections.data))\n  _sections.forEach((section) => {\n    if (!section.fields) return\n    section.fields = section.fields.map(\n      (field) => field.fieldname || field.name,\n    )\n  })\n  loading.value = true\n  call(\n    'crm.fcrm.doctype.crm_fields_layout.crm_fields_layout.save_fields_layout',\n    {\n      doctype: _doctype.value,\n      type: 'Quick Entry',\n      layout: JSON.stringify(_sections),\n    },\n  ).then(() => {\n    loading.value = false\n    reload()\n  })\n}\n</script>\n"],"names":["props","__props","restrictedFieldTypes","params","computed","fields","createResource","addField","section","field","getOptions","watch","show","_useModel","_doctype","ref","loading","dirty","preview","getParams","sections","data","onMounted","useDebounceFn","reload","nextTick","saveChanges","_sections","call"],"mappings":"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"}